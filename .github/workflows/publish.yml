name: Publish

on:
  push:
    branches:
    - master

env:
  DOCKER_BASE_NAME: docker.pkg.github.com/${{ github.repository }}/secretlint
  DOCKER_HUB_BASE_NAME: secretlint/secretlint

jobs:
  hadolint:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - run: brew install hadolint
    - run: hadolint ./Dockerfile
      working-directory: ./docker

  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: yarn run build
      - name: Create Release Pull Request
        uses: changesets/action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: yarn run build
      - name: Publish to npm
        run: npm run release-ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  publish-docker:
    runs-on: ubuntu-18.04
    needs: [hadolint, publish-npm]
    steps:
    - uses: actions/checkout@v2
    - name: "Set TAG_NAME=tags"
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "::set-env name=TAG_NAME::${GITHUB_REF:10}"
        echo "::set-env name=SECRETLINT_VERSION::${GITHUB_REF:11}"
    - name: "Set TAG_NAME=LATEST"
      if: startsWith(github.ref, 'refs/tags/') != true
      run: |
        echo "::set-env name=TAG_NAME::latest"
        echo "::set-env name=SECRETLINT_VERSION::latest"
    - name: Set HUB_TAG
      run: |
        echo "::set-env name=PKG_TAG::${DOCKER_BASE_NAME}:${TAG_NAME}"
        echo "::set-env name=HUB_TAG::${DOCKER_HUB_BASE_NAME}:${TAG_NAME}"
    - name: Build image
      run: |
        docker build . -t "${PKG_TAG}" --build-arg SECRETLINT_VERSION=${SECRETLINT_VERSION}
        docker tag "${PKG_TAG}" "${HUB_TAG}"
      working-directory: ./docker
    - name: Print version
      run: |
        docker run --rm ${PKG_TAG} --version
      working-directory: ./docker
    - name: Scan image
      run: |
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
          -v ${HOME}/.cache:/root/.cache aquasec/trivy:latest --exit-code 1 ${PKG_TAG}
      working-directory: ./docker

    - name: Login to Registries
      if: github.event_name != 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      run: |
        echo "${GITHUB_TOKEN}" | docker login docker.pkg.github.com -u azu --password-stdin
        echo "${DOCKER_HUB_TOKEN}" | docker login -u efcl --password-stdin

    - name: Push to GitHub Packages
      if: github.event_name != 'pull_request'
      run: docker push "${PKG_TAG}"

    - name: Push to Docker Hub
      if: github.event_name != 'pull_request'
      run: docker push "${HUB_TAG}"
