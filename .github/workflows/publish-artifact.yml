# Post publish after npm
name: Publish-Artifact
on:
  repository_dispatch:
    types: [publish-artifact]
env:
  CI: true
  DOCKER_BASE_NAME: docker.pkg.github.com/${{ github.repository }}/secretlint
  DOCKER_HUB_BASE_NAME: secretlint/secretlint

jobs:
  # npm binary
  publish-binary:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-18.04]
        node_version: [12.9.1] # pre-build nexe https://github.com/nexe/nexe/releases/tag/v3.0.0
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}
      - name: Install
        run: npm install # avoid hoisting https://github.com/nexe/nexe/issues/649
        working-directory: ./publish/binary-compiler
      - name: Build binary
        run: npm run dist
        working-directory: ./publish/binary-compiler
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}
          path: ./publish/binary-compiler/dist
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.client_payload.version }}
          files: "./publish/binary-compiler/dist/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Docker
  publish-docker:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: "Set TAG_NAME=tags"
        run: |
          echo "::set-env name=TAG_NAME::v${{ github.event.client_payload.version }}"
          echo "::set-env name=SECRETLINT_VERSION::${{ github.event.client_payload.version }}"
      - name: Set HUB_TAG
        run: |
          echo "::set-env name=PKG_TAG::${DOCKER_BASE_NAME}:${TAG_NAME}"
          echo "::set-env name=HUB_TAG::${DOCKER_HUB_BASE_NAME}:${TAG_NAME}"
      - name: Build image
        run: |
          docker build . -t "${PKG_TAG}" --build-arg SECRETLINT_VERSION=${SECRETLINT_VERSION}
          docker tag "${PKG_TAG}" "${HUB_TAG}"
        working-directory: ./publish/docker
      - name: Print version
        run: |
          docker run --rm ${PKG_TAG} --version
        working-directory: ./publish/docker
      - name: Scan image
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            -v ${HOME}/.cache:/root/.cache aquasec/trivy:latest --exit-code 1 ${PKG_TAG}
        working-directory: ./publish/docker
      - name: Login to Registries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        run: |
          echo "${GITHUB_TOKEN}" | docker login docker.pkg.github.com -u azu --password-stdin
          echo "${DOCKER_HUB_TOKEN}" | docker login -u efcl --password-stdin
      - name: Push to GitHub Packages
        run: docker push "${PKG_TAG}"
      - name: Push to Docker Hub
        run: docker push "${HUB_TAG}"
